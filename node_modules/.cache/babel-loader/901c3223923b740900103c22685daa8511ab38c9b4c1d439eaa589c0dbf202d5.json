{"ast":null,"code":"var _jsxFileName = \"/Users/yyu/Downloads/Decertaion_edinburgh_napier_university-master/src/components/Stu_record.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import { CSVLink } from \"react-csv\";\nimport \"./Stu_record.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Stu_record() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = () => {\n      const data = reader.result;\n      const students = data.split(\"\\n\").map(row => {\n        const [id, name] = row.split(\",\");\n        return {\n          id,\n          name,\n          email: `${id}@live.napier.ac.uk`,\n          appliedProjects: \"\",\n          assignedProject: \"\"\n        };\n      });\n      setStudents(students);\n    };\n  };\n  const handleProjectSelection = (event, student) => {\n    student.appliedProjects = event.target.value;\n    setStudents([...students]);\n  };\n  const handleProjectAssignment = (event, student) => {\n    student.assignedProject = event.target.value;\n    setStudents([...students]);\n  };\n  const headers = [{\n    label: \"ID\",\n    key: \"id\"\n  }, {\n    label: \"Name\",\n    key: \"name\"\n  }, {\n    label: \"Email\",\n    key: \"email\"\n  }, {\n    label: \"Applied Projects\",\n    key: \"appliedProjects\"\n  }, {\n    label: \"Assigned Project\",\n    key: \"assignedProject\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edinburgh Napier University\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Record Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Module Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Module ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), students.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header.label\n            }, header.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: student.appliedProjects,\n                onChange: event => handleProjectSelection(event, student),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"--Select Project--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Project A\",\n                  children: \"Project A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Project B\",\n                  children: \"Project B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Project C\",\n                  children: \"Project C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                defaultValue: student.assignedProject,\n                onChange: event => handleProjectAssignment(event, student)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n        data: students,\n        headers: headers,\n        filename: \"student_allocation.csv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), students.length === 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.label\n          }, header.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 5,\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Stu_record, \"JtKaxtkhMyOVJuIvkKS1xPEW1Ac=\");\n_c = Stu_record;\nexport default Stu_record;\nvar _c;\n$RefreshReg$(_c, \"Stu_record\");","map":{"version":3,"names":["React","useState","Stu_record","students","setStudents","handleFileUpload","event","file","target","files","reader","FileReader","readAsText","onload","data","result","split","map","row","id","name","email","appliedProjects","assignedProject","handleProjectSelection","student","value","handleProjectAssignment","headers","label","key","length","header"],"sources":["/Users/yyu/Downloads/Decertaion_edinburgh_napier_university-master/src/components/Stu_record.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { CSVLink } from \"react-csv\";\nimport \"./Stu_record.css\";\n\n\nfunction Stu_record() {\n  const [students, setStudents] = useState([]);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = () => {\n      const data = reader.result;\n      const students = data.split(\"\\n\").map((row) => {\n        const [id, name] = row.split(\",\");\n        return {\n          id,\n          name,\n          email: `${id}@live.napier.ac.uk`,\n          appliedProjects: \"\",\n          assignedProject: \"\",\n        };\n      });\n      setStudents(students);\n    };\n  };\n\n  const handleProjectSelection = (event, student) => {\n    student.appliedProjects = event.target.value;\n    setStudents([...students]);\n  };\n\n  const handleProjectAssignment = (event, student) => {\n    student.assignedProject = event.target.value;\n    setStudents([...students]);\n  };\n\n  const headers = [\n    { label: \"ID\", key: \"id\" },\n    { label: \"Name\", key: \"name\" },\n    { label: \"Email\", key: \"email\" },\n    { label: \"Applied Projects\", key: \"appliedProjects\" },\n    { label: \"Assigned Project\", key: \"assignedProject\" },\n  ];\n\n  return (\n    <div className=\"container\">\n    <h1>Edinburgh Napier University</h1> \n    <h2>Student Record Page</h2>\n    <form>\n      <label>Module Title:\n        <input type=\"text\" />\n      </label>\n      <label>Module ID:\n        <input type=\"text\" />\n      </label>\n    </form>\n   \n      <input type=\"file\" onChange={handleFileUpload} />\n      {students.length > 0 && (\n        <>\n          <table border=\"1\">\n            <thead>\n              <tr>\n                {headers.map((header) => (\n                  <th key={header.key}>{header.label}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student) => (\n                <tr key={student.id}>\n                  <td>{student.id}</td>\n                  <td>{student.name}</td>\n                  <td>{student.email}</td>\n                  <td>\n                    <select\n                      value={student.appliedProjects}\n                      onChange={(event) =>\n                        handleProjectSelection(event, student)\n                      }\n                    >\n                      <option value=\"\">--Select Project--</option>\n                      <option value=\"Project A\">Project A</option>\n                      <option value=\"Project B\">Project B</option>\n                      <option value=\"Project C\">Project C</option>\n                    </select>\n                  </td>\n                  <td>\n                    <input\n                      defaultValue={student.assignedProject}\n                      onChange={(event) =>\n                        handleProjectAssignment(event, student)\n                      }\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <CSVLink data={students} headers={headers} filename=\"student_allocation.csv\" >\n           <button>Export CSV</button> \n          </CSVLink>\n          \n        </>\n      )}\n       {students.length === 0 && (\n        <table border=\"1\">\n          <thead>\n            <tr>\n              {headers.map((header) => (\n                <th key={header.key}>{header.label}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td colSpan={5}>No data available</td>\n            </tr>\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default Stu_record;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}